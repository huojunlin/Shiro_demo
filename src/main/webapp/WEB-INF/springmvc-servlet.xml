<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<!-- 自动扫描的包名 -->
	<context:component-scan base-package="com.yesway" />
	<context:component-scan base-package="com.yesway.**.controller" />
	<context:component-scan base-package="com.yesway.**.service" />

	<!-- 默认的注解映射的支持 -->
	<!-- 有了它，就不需要显式的配置DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter了 -->
	<mvc:annotation-driven />

	<!-- 视图解释类 通过配置文件，把一个视图名交给到一个View来处理 InternalResourceViewResolver加入了JSTL的支持 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
		<property name="contentType" value="text/html;charset=UTF-8">
		</property>
	</bean>

	<!-- 静态资源访问处理 -->
	<mvc:resources mapping="/css/**" location="/static/css/" />
	<mvc:resources mapping="/js/**" location="/static/js/" />
	<mvc:resources mapping="/images/**" location="/static/images/" />
	<mvc:resources mapping="/resource/**" location="/static/resource/" />
	
	<!-- 开启Shiro注解的Spring配置方式的beans，spring-mvc必须放在xxx-servlet配置文件中 -->	
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor" >
		<property name="proxyTargetClass" value="true"></property>
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    	<property name="securityManager" ref="securityManager"/>
	</bean>
	
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.apache.shiro.authz.UnauthorizedException">redirect:/unauthorized.html</prop>
				<prop key="org.apache.shiro.authz.AuthorizationException">redirect:/login.html</prop>
			</props>
		</property>
	</bean>
</beans>